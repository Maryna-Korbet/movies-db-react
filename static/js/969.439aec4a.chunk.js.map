{"version":3,"file":"static/js/969.439aec4a.chunk.js","mappings":"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","sources":["features/About/CountdownText.tsx","features/About/CountdownVideo.tsx","svg/usa-flag.svg","features/About/MapView.tsx","helpers/mapWidget.ts","features/About/About.tsx"],"sourcesContent":["import { Typography } from \"@mui/material\";\nimport { useEffect, useRef, useState } from \"react\";\n\nexport function CountdownText() {\n    const [countdown, setCountdown] = useState(1000);\n    const intervalRef = useRef<any>();\n\n    useEffect(() => {\n        intervalRef.current = setInterval(() => {\n            setCountdown(value => value - 1)\n        }, 1000);\n        \n        return () => clearInterval(intervalRef.current);\n    }, []);\n\n    useEffect(() => {\n        if (countdown === 0) {\n            clearInterval(intervalRef.current);\n        }\n    });\n    \n    return (\n        <Typography variant=\"h6\" align=\"center\" mb={2}>\n            Comming coon: {countdown}\n        </Typography>\n    );\n}","import { Card, CardActions, CardMedia, IconButton } from \"@mui/material\";\nimport PlayArrowIcon from '@mui/icons-material/PlayArrow';\nimport PauseIcon from '@mui/icons-material/Pause';\nimport { useState, useRef } from \"react\";\n\n\nexport function CountdownVideo() {\n    const [isPlaying, setIsPlaying] = useState(false);\n    const videoRef = useRef<HTMLVideoElement>(null)\n\n    function togglePlaying() {\n        const nextPlaying = !isPlaying;\n\n        if (nextPlaying) {\n            videoRef.current?.play();\n        } else {\n            videoRef.current?.pause();\n        }\n    };\n    \n    return (\n        <Card>\n            <CardMedia>\n                <video\n                    ref={videoRef}\n                    src=\"https://videos.pexels.com/video-files/4276289/4276289-uhd_3840_2160_30fps.mp4\"\n                    height={700} \n                    onPlay={() => setIsPlaying(true)}\n                    onPause={() => setIsPlaying(false)}\n                autoPlay loop muted />\n            </CardMedia>\n            <CardActions>\n                <IconButton onClick={togglePlaying}>\n                    {isPlaying\n                        ? <PauseIcon sx={{ height: 38, width: 38 }} />\n                        : <PlayArrowIcon sx={{ height: 38, width: 38 }} />\n                    }\n                </IconButton>\n        </CardActions>\n        </Card>\n    );\n}","function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgUsaFlag(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Flag\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 1990 1050\",\n    style: {\n      enableBackground: \"new 0 0 1990 1050\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"rect\", {\n    x: 0.035,\n    y: 3.933,\n    style: {\n      fill: \"#FFFFFF\"\n    },\n    width: 1989.965,\n    height: 1042.192\n  }), /*#__PURE__*/React.createElement(\"rect\", {\n    x: 0.055,\n    y: 0.014,\n    style: {\n      fill: \"#B22234\"\n    },\n    width: 1988.297,\n    height: 82.442\n  }), /*#__PURE__*/React.createElement(\"rect\", {\n    x: 0.055,\n    y: 161.273,\n    style: {\n      fill: \"#B22234\"\n    },\n    width: 1988.297,\n    height: 82.44\n  }), /*#__PURE__*/React.createElement(\"rect\", {\n    x: 0.055,\n    y: 322.529,\n    style: {\n      fill: \"#B22234\"\n    },\n    width: 1988.297,\n    height: 82.441\n  }), /*#__PURE__*/React.createElement(\"rect\", {\n    x: 0.055,\n    y: 483.786,\n    style: {\n      fill: \"#B22234\"\n    },\n    width: 1988.297,\n    height: 82.441\n  }), /*#__PURE__*/React.createElement(\"rect\", {\n    x: 0.055,\n    y: 645.043,\n    style: {\n      fill: \"#B22234\"\n    },\n    width: 1988.297,\n    height: 82.443\n  }), /*#__PURE__*/React.createElement(\"rect\", {\n    x: 0.055,\n    y: 806.302,\n    style: {\n      fill: \"#B22234\"\n    },\n    width: 1988.297,\n    height: 82.441\n  }), /*#__PURE__*/React.createElement(\"rect\", {\n    x: 0.055,\n    y: 967.558,\n    style: {\n      fill: \"#B22234\"\n    },\n    width: 1988.297,\n    height: 82.441\n  }), /*#__PURE__*/React.createElement(\"rect\", {\n    style: {\n      fill: \"#3C3B6E\"\n    },\n    width: 794.114,\n    height: 566.247\n  }), /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"polygon\", {\n    style: {\n      fill: \"#FFFFFF\"\n    },\n    points: \"67.542,21.684 74.973,44.798 99.022,44.798 79.565,59.083 86.998,82.198 67.542,67.913  48.086,82.198 55.517,59.083 36.06,44.798 60.109,44.798  \"\n  }), /*#__PURE__*/React.createElement(\"polygon\", {\n    style: {\n      fill: \"#FFFFFF\"\n    },\n    points: \"132.992,79.785 140.423,102.9 164.472,102.9 145.018,117.185 152.448,140.299  132.992,126.015 113.536,140.299 120.967,117.185 101.513,102.9 125.562,102.9  \"\n  }), /*#__PURE__*/React.createElement(\"polygon\", {\n    style: {\n      fill: \"#FFFFFF\"\n    },\n    points: \"132.992,193.306 140.423,216.421 164.472,216.421 145.018,230.706 152.448,253.82  132.992,239.536 113.536,253.82 120.967,230.706 101.513,216.421 125.562,216.421  \"\n  }), /*#__PURE__*/React.createElement(\"polygon\", {\n    style: {\n      fill: \"#FFFFFF\"\n    },\n    points: \"132.992,306.827 140.423,329.942 164.472,329.942 145.018,344.227 152.448,367.341  132.992,353.057 113.536,367.341 120.967,344.227 101.513,329.942 125.562,329.942  \"\n  }), /*#__PURE__*/React.createElement(\"polygon\", {\n    style: {\n      fill: \"#FFFFFF\"\n    },\n    points: \"132.992,420.348 140.423,443.463 164.472,443.463 145.018,457.748 152.448,480.863  132.992,466.578 113.536,480.863 120.967,457.748 101.513,443.463 125.562,443.463  \"\n  }), /*#__PURE__*/React.createElement(\"polygon\", {\n    style: {\n      fill: \"#FFFFFF\"\n    },\n    points: \"265.664,79.785 273.094,102.9 297.143,102.9 277.687,117.185 285.12,140.299  265.664,126.015 246.207,140.299 253.638,117.185 234.182,102.9 258.231,102.9  \"\n  }), /*#__PURE__*/React.createElement(\"polygon\", {\n    style: {\n      fill: \"#FFFFFF\"\n    },\n    points: \"265.664,193.306 273.094,216.421 297.143,216.421 277.687,230.706 285.12,253.82  265.664,239.536 246.207,253.82 253.638,230.706 234.182,216.421 258.231,216.421  \"\n  }), /*#__PURE__*/React.createElement(\"polygon\", {\n    style: {\n      fill: \"#FFFFFF\"\n    },\n    points: \"265.664,306.827 273.094,329.942 297.143,329.942 277.687,344.227 285.12,367.341  265.664,353.057 246.207,367.341 253.638,344.227 234.182,329.942 258.231,329.942  \"\n  }), /*#__PURE__*/React.createElement(\"polygon\", {\n    style: {\n      fill: \"#FFFFFF\"\n    },\n    points: \"265.664,420.348 273.094,443.463 297.143,443.463 277.687,457.748 285.12,480.863  265.664,466.578 246.207,480.863 253.638,457.748 234.182,443.463 258.231,443.463  \"\n  }), /*#__PURE__*/React.createElement(\"polygon\", {\n    style: {\n      fill: \"#FFFFFF\"\n    },\n    points: \"398.335,79.785 405.766,102.9 429.814,102.9 410.358,117.185 417.791,140.299  398.335,126.015 378.879,140.299 386.309,117.185 366.853,102.9 390.902,102.9  \"\n  }), /*#__PURE__*/React.createElement(\"polygon\", {\n    style: {\n      fill: \"#FFFFFF\"\n    },\n    points: \"398.335,193.306 405.766,216.421 429.814,216.421 410.358,230.706 417.791,253.82  398.335,239.536 378.879,253.82 386.309,230.706 366.853,216.421 390.902,216.421  \"\n  }), /*#__PURE__*/React.createElement(\"polygon\", {\n    style: {\n      fill: \"#FFFFFF\"\n    },\n    points: \"398.335,306.827 405.766,329.942 429.814,329.942 410.358,344.227 417.791,367.341  398.335,353.057 378.879,367.341 386.309,344.227 366.853,329.942 390.902,329.942  \"\n  }), /*#__PURE__*/React.createElement(\"polygon\", {\n    style: {\n      fill: \"#FFFFFF\"\n    },\n    points: \"398.335,420.348 405.766,443.463 429.814,443.463 410.358,457.748 417.791,480.863  398.335,466.578 378.879,480.863 386.309,457.748 366.853,443.463 390.902,443.463  \"\n  }), /*#__PURE__*/React.createElement(\"polygon\", {\n    style: {\n      fill: \"#FFFFFF\"\n    },\n    points: \"531.004,79.785 538.437,102.9 562.486,102.9 543.03,117.185 550.46,140.299  531.004,126.015 511.55,140.299 518.981,117.185 499.525,102.9 523.573,102.9  \"\n  }), /*#__PURE__*/React.createElement(\"polygon\", {\n    style: {\n      fill: \"#FFFFFF\"\n    },\n    points: \"531.004,193.306 538.437,216.421 562.486,216.421 543.03,230.706 550.46,253.82  531.004,239.536 511.55,253.82 518.981,230.706 499.525,216.421 523.573,216.421  \"\n  }), /*#__PURE__*/React.createElement(\"polygon\", {\n    style: {\n      fill: \"#FFFFFF\"\n    },\n    points: \"531.004,306.827 538.437,329.942 562.486,329.942 543.03,344.227 550.46,367.341  531.004,353.057 511.55,367.341 518.981,344.227 499.525,329.942 523.573,329.942  \"\n  }), /*#__PURE__*/React.createElement(\"polygon\", {\n    style: {\n      fill: \"#FFFFFF\"\n    },\n    points: \"531.004,420.348 538.437,443.463 562.486,443.463 543.03,457.748 550.46,480.863  531.004,466.578 511.55,480.863 518.981,457.748 499.525,443.463 523.573,443.463  \"\n  }), /*#__PURE__*/React.createElement(\"polygon\", {\n    style: {\n      fill: \"#FFFFFF\"\n    },\n    points: \"663.675,79.785 671.108,102.9 695.155,102.9 675.701,117.185 683.131,140.299  663.675,126.015 644.221,140.299 651.652,117.185 632.196,102.9 656.245,102.9  \"\n  }), /*#__PURE__*/React.createElement(\"polygon\", {\n    style: {\n      fill: \"#FFFFFF\"\n    },\n    points: \"663.675,193.306 671.108,216.421 695.155,216.421 675.701,230.706 683.131,253.82  663.675,239.536 644.221,253.82 651.652,230.706 632.196,216.421 656.245,216.421  \"\n  }), /*#__PURE__*/React.createElement(\"polygon\", {\n    style: {\n      fill: \"#FFFFFF\"\n    },\n    points: \"663.675,306.827 671.108,329.942 695.155,329.942 675.701,344.227 683.131,367.341  663.675,353.057 644.221,367.341 651.652,344.227 632.196,329.942 656.245,329.942  \"\n  }), /*#__PURE__*/React.createElement(\"polygon\", {\n    style: {\n      fill: \"#FFFFFF\"\n    },\n    points: \"663.675,420.348 671.108,443.463 695.155,443.463 675.701,457.748 683.131,480.863  663.675,466.578 644.221,480.863 651.652,457.748 632.196,443.463 656.245,443.463  \"\n  }), /*#__PURE__*/React.createElement(\"polygon\", {\n    style: {\n      fill: \"#FFFFFF\"\n    },\n    points: \"67.542,135.205 74.973,158.319 99.022,158.319 79.565,172.604 86.998,195.719  67.542,181.434 48.086,195.719 55.517,172.604 36.06,158.319 60.109,158.319  \"\n  }), /*#__PURE__*/React.createElement(\"polygon\", {\n    style: {\n      fill: \"#FFFFFF\"\n    },\n    points: \"67.542,248.726 74.973,271.84 99.022,271.84 79.565,286.125 86.998,309.24 67.542,294.955  48.086,309.24 55.517,286.125 36.06,271.84 60.109,271.84  \"\n  }), /*#__PURE__*/React.createElement(\"polygon\", {\n    style: {\n      fill: \"#FFFFFF\"\n    },\n    points: \"67.542,362.247 74.973,385.361 99.022,385.361 79.565,399.646 86.998,422.761  67.542,408.476 48.086,422.761 55.517,399.646 36.06,385.361 60.109,385.361  \"\n  }), /*#__PURE__*/React.createElement(\"polygon\", {\n    style: {\n      fill: \"#FFFFFF\"\n    },\n    points: \"67.542,475.768 74.973,498.883 99.022,498.883 79.565,513.167 86.998,536.282  67.542,521.997 48.086,536.282 55.517,513.167 36.06,498.883 60.109,498.883  \"\n  }), /*#__PURE__*/React.createElement(\"polygon\", {\n    style: {\n      fill: \"#FFFFFF\"\n    },\n    points: \"198.443,21.684 205.873,44.798 229.924,44.798 210.468,59.083 217.899,82.198  198.443,67.913 178.986,82.198 186.419,59.083 166.963,44.798 191.012,44.798  \"\n  }), /*#__PURE__*/React.createElement(\"polygon\", {\n    style: {\n      fill: \"#FFFFFF\"\n    },\n    points: \"198.443,135.205 205.873,158.319 229.924,158.319 210.468,172.604 217.899,195.719  198.443,181.434 178.986,195.719 186.419,172.604 166.963,158.319 191.012,158.319  \"\n  }), /*#__PURE__*/React.createElement(\"polygon\", {\n    style: {\n      fill: \"#FFFFFF\"\n    },\n    points: \"198.443,248.726 205.873,271.84 229.924,271.84 210.468,286.125 217.899,309.24  198.443,294.955 178.986,309.24 186.419,286.125 166.963,271.84 191.012,271.84  \"\n  }), /*#__PURE__*/React.createElement(\"polygon\", {\n    style: {\n      fill: \"#FFFFFF\"\n    },\n    points: \"198.443,362.247 205.873,385.361 229.924,385.361 210.468,399.646 217.899,422.761  198.443,408.476 178.986,422.761 186.419,399.646 166.963,385.361 191.012,385.361  \"\n  }), /*#__PURE__*/React.createElement(\"polygon\", {\n    style: {\n      fill: \"#FFFFFF\"\n    },\n    points: \"198.443,475.768 205.873,498.883 229.924,498.883 210.468,513.167 217.899,536.282  198.443,521.997 178.986,536.282 186.419,513.167 166.963,498.883 191.012,498.883  \"\n  }), /*#__PURE__*/React.createElement(\"polygon\", {\n    style: {\n      fill: \"#FFFFFF\"\n    },\n    points: \"332.883,21.684 340.315,44.798 364.362,44.798 344.908,59.083 352.339,82.198  332.883,67.913 313.428,82.198 320.859,59.083 301.403,44.798 325.452,44.798  \"\n  }), /*#__PURE__*/React.createElement(\"polygon\", {\n    style: {\n      fill: \"#FFFFFF\"\n    },\n    points: \"332.883,135.205 340.315,158.319 364.362,158.319 344.908,172.604 352.339,195.719  332.883,181.434 313.428,195.719 320.859,172.604 301.403,158.319 325.452,158.319  \"\n  }), /*#__PURE__*/React.createElement(\"polygon\", {\n    style: {\n      fill: \"#FFFFFF\"\n    },\n    points: \"332.883,248.726 340.315,271.84 364.362,271.84 344.908,286.125 352.339,309.24  332.883,294.955 313.428,309.24 320.859,286.125 301.403,271.84 325.452,271.84  \"\n  }), /*#__PURE__*/React.createElement(\"polygon\", {\n    style: {\n      fill: \"#FFFFFF\"\n    },\n    points: \"332.883,362.247 340.315,385.361 364.362,385.361 344.908,399.646 352.339,422.761  332.883,408.476 313.428,422.761 320.859,399.646 301.403,385.361 325.452,385.361  \"\n  }), /*#__PURE__*/React.createElement(\"polygon\", {\n    style: {\n      fill: \"#FFFFFF\"\n    },\n    points: \"332.883,475.768 340.315,498.883 364.362,498.883 344.908,513.167 352.339,536.282  332.883,521.997 313.428,536.282 320.859,513.167 301.403,498.883 325.452,498.883  \"\n  }), /*#__PURE__*/React.createElement(\"polygon\", {\n    style: {\n      fill: \"#FFFFFF\"\n    },\n    points: \"464.67,21.684 472.101,44.798 496.15,44.798 476.694,59.083 484.124,82.198 464.67,67.913  445.214,82.198 452.645,59.083 433.189,44.798 457.238,44.798  \"\n  }), /*#__PURE__*/React.createElement(\"polygon\", {\n    style: {\n      fill: \"#FFFFFF\"\n    },\n    points: \"464.67,135.205 472.101,158.319 496.15,158.319 476.694,172.604 484.124,195.719  464.67,181.434 445.214,195.719 452.645,172.604 433.189,158.319 457.238,158.319  \"\n  }), /*#__PURE__*/React.createElement(\"polygon\", {\n    style: {\n      fill: \"#FFFFFF\"\n    },\n    points: \"464.67,248.726 472.101,271.84 496.15,271.84 476.694,286.125 484.124,309.24  464.67,294.955 445.214,309.24 452.645,286.125 433.189,271.84 457.238,271.84  \"\n  }), /*#__PURE__*/React.createElement(\"polygon\", {\n    style: {\n      fill: \"#FFFFFF\"\n    },\n    points: \"464.67,362.247 472.101,385.361 496.15,385.361 476.694,399.646 484.124,422.761  464.67,408.476 445.214,422.761 452.645,399.646 433.189,385.361 457.238,385.361  \"\n  }), /*#__PURE__*/React.createElement(\"polygon\", {\n    style: {\n      fill: \"#FFFFFF\"\n    },\n    points: \"464.67,475.768 472.101,498.883 496.15,498.883 476.694,513.167 484.124,536.282  464.67,521.997 445.214,536.282 452.645,513.167 433.189,498.883 457.238,498.883  \"\n  }), /*#__PURE__*/React.createElement(\"polygon\", {\n    style: {\n      fill: \"#FFFFFF\"\n    },\n    points: \"596.456,21.684 603.887,44.798 627.936,44.798 608.48,59.083 615.913,82.198  596.456,67.913 577,82.198 584.431,59.083 564.975,44.798 589.024,44.798  \"\n  }), /*#__PURE__*/React.createElement(\"polygon\", {\n    style: {\n      fill: \"#FFFFFF\"\n    },\n    points: \"596.456,135.205 603.887,158.319 627.936,158.319 608.48,172.604 615.913,195.719  596.456,181.434 577,195.719 584.431,172.604 564.975,158.319 589.024,158.319  \"\n  }), /*#__PURE__*/React.createElement(\"polygon\", {\n    style: {\n      fill: \"#FFFFFF\"\n    },\n    points: \"596.456,248.726 603.887,271.84 627.936,271.84 608.48,286.125 615.913,309.24  596.456,294.955 577,309.24 584.431,286.125 564.975,271.84 589.024,271.84  \"\n  }), /*#__PURE__*/React.createElement(\"polygon\", {\n    style: {\n      fill: \"#FFFFFF\"\n    },\n    points: \"596.456,362.247 603.887,385.361 627.936,385.361 608.48,399.646 615.913,422.761  596.456,408.476 577,422.761 584.431,399.646 564.975,385.361 589.024,385.361  \"\n  }), /*#__PURE__*/React.createElement(\"polygon\", {\n    style: {\n      fill: \"#FFFFFF\"\n    },\n    points: \"596.456,475.768 603.887,498.883 627.936,498.883 608.48,513.167 615.913,536.282  596.456,521.997 577,536.282 584.431,513.167 564.975,498.883 589.024,498.883  \"\n  }), /*#__PURE__*/React.createElement(\"polygon\", {\n    style: {\n      fill: \"#FFFFFF\"\n    },\n    points: \"730.894,21.684 738.327,44.798 762.376,44.798 742.919,59.083 750.35,82.198  730.894,67.913 711.44,82.198 718.871,59.083 699.415,44.798 723.464,44.798  \"\n  }), /*#__PURE__*/React.createElement(\"polygon\", {\n    style: {\n      fill: \"#FFFFFF\"\n    },\n    points: \"730.894,135.205 738.327,158.319 762.376,158.319 742.919,172.604 750.35,195.719  730.894,181.434 711.44,195.719 718.871,172.604 699.415,158.319 723.464,158.319  \"\n  }), /*#__PURE__*/React.createElement(\"polygon\", {\n    style: {\n      fill: \"#FFFFFF\"\n    },\n    points: \"730.894,248.726 738.327,271.84 762.376,271.84 742.919,286.125 750.35,309.24  730.894,294.955 711.44,309.24 718.871,286.125 699.415,271.84 723.464,271.84  \"\n  }), /*#__PURE__*/React.createElement(\"polygon\", {\n    style: {\n      fill: \"#FFFFFF\"\n    },\n    points: \"730.894,362.247 738.327,385.361 762.376,385.361 742.919,399.646 750.35,422.761  730.894,408.476 711.44,422.761 718.871,399.646 699.415,385.361 723.464,385.361  \"\n  }), /*#__PURE__*/React.createElement(\"polygon\", {\n    style: {\n      fill: \"#FFFFFF\"\n    },\n    points: \"730.894,475.768 738.327,498.883 762.376,498.883 742.919,513.167 750.35,536.282  730.894,521.997 711.44,536.282 718.871,513.167 699.415,498.883 723.464,498.883  \"\n  }))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgUsaFlag);\nexport default __webpack_public_path__ + \"static/media/usa-flag.9c73f9962d8dac5bce6782d9b9428a82.svg\";\nexport { ForwardRef as ReactComponent };","import { useRef, useEffect, useState } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport { Map } from \"leaflet\";\nimport { Box, Container, Typography } from \"@mui/material\";\nimport { createMapWidget, addPopupToMapWidget } from \"../../helpers/mapWidget\";\nimport usaFlag from \"../../svg/usa-flag.svg\";\n\n\nexport  function MapView() {\n  const containerRef = useRef<HTMLDivElement>(null);\n  const mapRef = useRef<Map | null>(null);\n  const [popupContainer, setPopupContainer] = useState<HTMLElement | null>(null);\n\n  useEffect(() => {\n    if (mapRef.current === null) {\n      const map = createMapWidget(containerRef.current!);\n      mapRef.current = map;\n      const popupDiv = addPopupToMapWidget(map);\n      setPopupContainer(popupDiv);\n    }\n  }, []);\n\n  return (\n    <Container ref={containerRef} sx={{ width: 800, height: 500, my: 2 }}>\n      {popupContainer !== null && createPortal(<Greeting />, popupContainer)}\n    </Container>\n  );\n}\n\nfunction Greeting() {\n  return (\n    <Box sx={{\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      flexDirection: 'column',\n    }}>\n        <Typography sx={{ fontSize: 16, fontWeight: 'bold', marginLeft: 10}}>New York</Typography>\n        <img src={usaFlag} alt=\"USA Flag\" style={{ width: 50,  marginBottom: 10}} />\n</Box>\n  );\n}\n","import \"leaflet/dist/leaflet.css\";\nimport * as L from \"leaflet\";\n\nexport function createMapWidget(containerDomNode: HTMLElement) {\n  const map = L.map(containerDomNode);\n  map.setView([49.575, 32.091], 6);\n  L.tileLayer(\"https://tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n    maxZoom: 19,\n    attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n  }).addTo(map);\n\n  return map;\n}\n\nexport function addPopupToMapWidget(map: L.Map) {\n  const popupDiv = document.createElement(\"div\");\n  L.popup().setLatLng([40.706974, -74.013855]).setContent(popupDiv).openOn(map);\n  \n  return popupDiv;\n}\n","import { Container } from \"@mui/material\";\nimport { CountdownText } from \"./CountdownText\";\nimport { CountdownVideo } from \"./CountdownVideo\";\nimport { MapView } from \"./MapView\";\n\n\nexport default function About() {\n    return (\n        <Container sx={{\n            display: 'flex',\n            justifyContent: 'center',\n            flexDirection: 'column',\n            py: 8, maxWidth: 'lg',\n            mt: 8\n        }}>\n            <CountdownText />\n            <CountdownVideo />\n            <MapView />\n        </Container> \n    );\n}\n\n"],"names":["CountdownText","countdown","setCountdown","useState","intervalRef","useRef","useEffect","current","setInterval","value","clearInterval","_jsxs","Typography","variant","align","mb","children","CountdownVideo","isPlaying","setIsPlaying","videoRef","Card","_jsx","CardMedia","ref","src","height","onPlay","onPause","autoPlay","loop","muted","CardActions","IconButton","onClick","_videoRef$current","_videoRef$current2","pause","play","PauseIcon","sx","width","PlayArrowIcon","MapView","containerRef","mapRef","popupContainer","setPopupContainer","map","containerDomNode","L","setView","maxZoom","attribution","addTo","createMapWidget","popupDiv","document","createElement","setLatLng","setContent","openOn","addPopupToMapWidget","Container","my","createPortal","Greeting","Box","display","alignItems","justifyContent","flexDirection","fontSize","fontWeight","marginLeft","usaFlag","alt","style","marginBottom","About","py","maxWidth","mt"],"sourceRoot":""}